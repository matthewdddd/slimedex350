[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
[include mainsail.cfg]
[include leds.cfg]
[include timelapse.cfg]
[include sensorless-homing.cfg]
[include hotkey.cfg]
[firmware_retraction]

[force_move]
enable_force_move: true

# host MCU service is preinstalled and ready to use with:
[mcu]
canbus_uuid:c35b7f1d90cf     
 
[mcu EBBCan]
canbus_uuid:4af6a86acdd1

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000
max_z_velocity: 25 			
max_z_accel: 350
square_corner_velocity: 5.0

[idle_timeout]
gcode:
    _cpufreq_set GOVERNOR=ondemand

timeout: 2700





#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on Motor1(B Motor)
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 32
rotation_distance: 40
# DK Configure for sensorless homing
# endstop_pin: ^EBBCan: PB6
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC13
interpolate: True
run_current: 1.0
sense_resistor: 0.110
diag_pin: ^PF4
driver_SGTHRS: 75 # 255 is most sensitive value, 0 is least sensitive

[autotune_tmc stepper_x]
motor: moons-ms17hd6p4200
tuning_goal: Performance 


## Y Stepper on Motor2 (A Motor)
[stepper_y]{% set BED = params.BED_TEMP|int %}
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE4
endstop_pin: tmc2209_stepper_y:virtual_endstop
microsteps: 32
rotation_distance: 40
##endstop_pin: ^PF3
position_min: -5
position_endstop: 356
position_max: 356

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE3
interpolate: True
run_current: 1.0
sense_resistor: 0.110
diag_pin: ^PF3
driver_SGTHRS: 90 # 255 is most sensitive value, 0 is least sensitive

[autotune_tmc stepper_x]
motor: moons-ms17hd6p4200
tuning_goal: Performance 

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Rear Stepper (from electronic side)-  MOTOR3
[stepper_z1]
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
rotation_distance: 4
microsteps: 16


[tmc2209 stepper_z1]
uart_pin: PB9
interpolate: True
run_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Left Stepper (from electronic side)- Motor4
[stepper_z2]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
rotation_distance: 4
microsteps: 16

[tmc2209 stepper_z2]
uart_pin: PB5
interpolate: True
run_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Right Stepper (from electronic side)- Motor5
[stepper_z]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
rotation_distance: 4
microsteps: 16

endstop_pin: probe:z_virtual_endstop
position_max: 291

##--------------------------------------------------------------------
position_min: -2
homing_speed: 15
second_homing_speed: 5
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PG14
interpolate: True
run_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0


##---------------------------------------Extruder / Bed ----------------------------------------

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 47.012
gear_ratio: 9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin:EBBCan: PA3
#   Analog input pin connected to the sensor. This parameter must be
#   provided.
#pullup_resistor: 4700
#   The resistance (in ohms) of the pullup attached to the sensor. The
#   default is 4700 ohms.
pressure_advance: 0.036
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 180
max_extrude_cross_section: 5
max_extrude_only_distance:105 



[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.6


[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PB1
max_power: 1.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769
pwm_cycle_time: 0.0166

##----------------- FANS -----------------------
[heater_fan hotend_fan]
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[multi_pin controller_fans]
pins: PF7,PF9

[controller_fan controller_fan]
##  Controller fan
pin: multi_pin:controller_fans
max_power: 0.4
kick_start_time: 0.5
heater: heater_bed

[fan]
pin: EBBCan: PA0 #10KHz PWM frecvency
max_power: 1.0

[fan_generic Aux]
#aux fan
pin: PF8
max_power: 1.0
kick_start_time: 5.0

[fan_generic Nevermore]
#  Exhaust fan - Nevermore Filter
pin: PF6
max_power: 1.0
kick_start_time: 5.0


[temperature_sensor buildplate]
sensor_type: Generic 3950
sensor_pin: PB0
min_temp: -40
max_temp: 120

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC5
min_temp: -40
max_temp: 100

[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2
min_temp: -100
max_temp: 100

[temperature_sensor CM4]
sensor_type: temperature_host

##--------------------------------------------Bed Mesh----------------------------------------------------

[scanner]
canbus_uuid: b8fa4e27ca0e            
x_offset: 0                          
y_offset: 15                         
backlash_comp: 0.00378    
sensor: cartographer
sensor_alt: carto
#scanner_touch_z_offset: 0.05         
#    This is the default and will be overwritten and added to the DO NOT SAVE area by using UI to save z offset
mesh_runs: 2


[bed_mesh]
zero_reference_position: 175, 175    
speed: 400
horizontal_move_z: 5
mesh_min: 35, 11
mesh_max: 325, 310
probe_count: 18, 18
algorithm: bicubic


[z_tilt]
z_positions:  ##Location of toolhead
  -50, 18
  175, 398
  400, 18
points:
  25, 0
  175, 310
  330, 0

speed: 350
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0065


##-------------------------------Input Shaping----------------------------------



[adxl345]
##cs_pin: scanner:PA3
##spi_bus: spi1
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20


[input_shaper]
#shaper_freq_x: 0
#shaper_type_x: mzv
#shaper_freq_y: 0
#shaper_type_y: mzv

[board_pins]
aliases:
    # EXP header
    EXP1_1=<5V>,
    EXP1_2=<GND>,
    EXP1_3=PF11,
    EXP1_4=PF12,
    EXP1_5=PF13,
    EXP1_6=PF14,
    EXP1_7=PF15,
    EXP1_8=PG0,
    EXP1_9=PG1,
    EXP1_10=PE7,
    EXP1_11=<RST>,
    EXP1_12=PE8,
    EXP1_13=PE14,
    EXP1_14=PE10,
    EXP1_15=PE11,
    EXP1_16=PE15,
    EXP1_17=PE12,
    EXP1_18=PE13



#####################################################################
#   Macros
#####################################################################

[gcode_macro PARK]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                           ; home if not already homed
    {% endif %}
    SAVE_GCODE_STATE NAME=PARK
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y-15} Z15 F7500        
    RESTORE_GCODE_STATE NAME=PARK
    
[gcode_macro _CHOME]
gcode:  
  {% if printer["gcode_macro status_homing"] != null %}
    status_homing
  {% endif %}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}
  
[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    Z_TILT_ADJUST
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
  _cpufreq_set GOVERNOR=performance
  SET_FAN_SPEED FAN=Aux SPEED=0
  {% set BED = params.BED_TEMP|int %}
  {% set EXTRUDER = params.EXTRUDER_TEMP|int %}
  M190 S{BED}  ;Set bed temperature
  CLEAN_NOZZLE
  M104 S150;Bed Mesh Calibration
  _CHOME  ;Home all Axes if not done already
  _CZTILT ##Z tilt if not done already 
  BED_MESH_CALIBRATE ADAPTIVE=1
  CARTOGRAPHER_TOUCH
  G0 X75 Y23 Z15 F7500
  M109 S{EXTRUDER}
  ##CLEAN_NOZZLE
  ##_ADAPTIVE_PURGE
  
[gcode_macro _CZTILT]
gcode:
  {% if printer["gcode_macro status_leveling"] != null %}
    status_leveling
  {% endif %}
    {% if printer.z_tilt.applied == False %}
        Z_TILT_ADJUST
    {% endif %}
  {% if printer["gcode_macro status_ready"] != null %}
    status_ready
  {% endif %}


[gcode_macro _MOVE_AWAY]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
      
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    CLEAN_NOZZLE
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    _cpufreq_set GOVERNOR=ondemand


[gcode_macro Load_Filament]
gcode:
    M83
    G1 E100 F500

[gcode_macro Nozzle_Cooldown]
gcode: 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
    G1 X175 Y175 Z10 F6000
    SET_FAN_SPEED FAN=Aux SPEED=1
    
[gcode_macro Unload_Filament]
gcode:
    M83                            ; set extruder to relative
    G1 E-40 F1800                  ; retract some, but not too much or it will jam
    G1 E-40 F1800                  ; retract some, but not too much or it will jam
    G1 E-40 F1800
    G1 E-20 F800
    M82                            ; set extruder to absolute

[gcode_macro CLEAN_NOZZLE]
variable_start_x: 269
variable_start_y: 352
variable_wipe_dist_x: 35
variable_wipe_dist_y: 1
variable_wipe_dist: -35
variable_wipe_qty: 8
variable_wipe_spd: 200

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F4000

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y-15} 
  
[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro _ADAPTIVE_PURGE]
description: A purge macro that adapts to be near your actual printed objects

variable_adaptive_enable: True      # Change to False if you'd like the purge to be in the same spot every print
variable_z_height: 0.8              # Height above the bed to purge
variable_purge_amount: 40           # Amount of filament to purge
variable_flow_rate: 8              # Desired flow rate in mm3/s
variable_x_default: 5              # X location to purge, overwritten if adaptive is True
variable_y_default: 5              # Y location to purge, overwritten if adaptive is True
variable_size: 10                  # Size of the logo
variable_distance_to_object_x: 5   # Distance in x to the print area
variable_distance_to_object_y: 5   # Distance in y to the print area

gcode:
    {% if adaptive_enable == True %}
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
        {% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
        {% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
        {% set x_origin = ([x_origin, 0] | max) %}
        {% set y_origin = ([y_origin, 0] | max) %}
        
         {% if x_origin < x_default %}
            set x_origin = x_default | float
         {% endif %}
         
         {% if y_origin < y_default %}
            set y_origin = y_default | float
         {% endif %}

    {% else %}
        {% set x_origin = x_default | float %}
        {% set y_origin = y_default | float %}
    {% endif %}
    
  
    {% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
    {% set prepurge_speed = flow_rate / 2.405 %}
    {% set travel_speed = printer.toolhead.max_velocity %}
    { action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }

    G92 E0
    G0 F{travel_speed*5}                                                               # Set travel speed
    G90                                                                                 # Absolute positioning
    G0 X{x_origin} Y{y_origin+size/2}                                                   # Move to purge position
    G0 Z{z_height}                                                                      # Move to purge Z height
    M83                                                                                 # Relative extrusion mode
    G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60} # Purge first line of logo
    G1 E-.5 F2100                                                                       # Retract
    G0 Z{z_height*2}                                                                    # Z hop
    G0 X{x_origin+size*0.789} Y{y_origin+size}                                          # Move to second purge line origin
    G0 Z{z_height}                                                                      # Move to purge Z height
    G1 E.5 F2100                                                                        # Recover
    G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}      # Purge second line of logo
    G1 E-.5 F2100                                                                       # Retract
    G0 Z{z_height*2}                                                                    # Z hop
    G0 X{x_origin+size*0.711} Y{y_origin}                                               # Move to third purge line origin
    G0 Z{z_height}                                                                      # Move to purge Z height
    G1 E.5 F2100                                                                        # Recover
    G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}    # Purge third line of logo
    G1 E-.5 F2100                                                                       # Retract
    G92 E0                                                                              # Reset extruder distance
    M82                                                                                 # Absolute extrusion mode
    G0 Z{z_height*2}                                                                    # Z hop
    {% if printer["gcode_macro status_printing"] != null %}
        status_printing
    {% endif %}
    

##-------------------------------------------------------------------
# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.3

[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]

[gcode_shell_command cpufreq_set]
command: sh -c "sudo /usr/bin/cpufreq-set -g $0"
timeout: 5.0
verbose: True

[gcode_macro _cpufreq_set]
description: set cpu governor
gcode:
  {% set governor = params.GOVERNOR|default("performance") %}
  RESPOND MSG='{"CPU set to %s" % (governor)}'
  RUN_SHELL_COMMAND CMD=cpufreq_set PARAMS={governor}


[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c $0"
timeout: 90.0
verbose: True

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 175.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : -5.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
gcode:


[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.484
#*# pid_ki = 0.752
#*# pid_kd = 518.228
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.000329, -0.009801, -0.013863, -0.012083, -0.010223, -0.014324, -0.018189, -0.017861, -0.021928, -0.018530, -0.018428, -0.013683, -0.009839, -0.008138, -0.000245, 0.001585, 0.000471, 0.001311
#*# 	0.001271, -0.003609, -0.011080, -0.013665, -0.012319, -0.014042, -0.018002, -0.017195, -0.011025, -0.009757, -0.013149, -0.012475, -0.009013, -0.006781, 0.001124, 0.007095, 0.006258, 0.020399
#*# 	-0.002669, -0.007708, -0.010385, -0.011957, -0.008717, -0.012499, -0.017415, -0.020430, -0.016857, -0.011882, -0.014371, -0.012793, -0.002370, 0.001743, 0.008432, 0.012694, 0.014787, 0.024926
#*# 	-0.002912, -0.007646, -0.006650, -0.006649, -0.007240, -0.010800, -0.016402, -0.017479, -0.008456, -0.006896, -0.004759, -0.001992, 0.005349, 0.008806, 0.018066, 0.025459, 0.032346, 0.037870
#*# 	0.005800, -0.001647, -0.000268, -0.001329, 0.001650, -0.002783, -0.008754, -0.008189, -0.002223, 0.004419, 0.007314, 0.012494, 0.020111, 0.022359, 0.032720, 0.043317, 0.051453, 0.057268
#*# 	0.010866, 0.004162, 0.000229, 0.001023, 0.004508, 0.001736, -0.004965, -0.003904, 0.002095, 0.007223, 0.008777, 0.018846, 0.028247, 0.036515, 0.046333, 0.052536, 0.063321, 0.068848
#*# 	0.008528, -0.000624, -0.002018, -0.001395, -0.003602, -0.005071, -0.007274, -0.005974, 0.003552, 0.007133, 0.010001, 0.017518, 0.028961, 0.041490, 0.054492, 0.060434, 0.064583, 0.072010
#*# 	-0.002104, -0.005377, -0.004657, -0.003387, -0.005103, -0.005693, -0.006716, -0.000372, 0.010499, 0.013374, 0.011987, 0.017766, 0.032053, 0.047206, 0.061931, 0.070733, 0.073219, 0.080930
#*# 	-0.014770, -0.017355, -0.013876, -0.012252, -0.008786, -0.008696, -0.002913, 0.006679, 0.015253, 0.013624, 0.011380, 0.017268, 0.030272, 0.044452, 0.062326, 0.070195, 0.077625, 0.082772
#*# 	-0.046357, -0.043985, -0.036722, -0.033207, -0.027387, -0.023569, -0.020931, -0.005910, 0.004866, 0.001130, -0.001519, 0.005484, 0.019963, 0.035536, 0.049846, 0.060907, 0.070661, 0.075419
#*# 	-0.063262, -0.057819, -0.049806, -0.040643, -0.033379, -0.026232, -0.024195, -0.013221, -0.007008, -0.007232, -0.008530, 0.003735, 0.018514, 0.030116, 0.046600, 0.060396, 0.069853, 0.077701
#*# 	-0.076130, -0.069198, -0.056735, -0.045713, -0.032424, -0.024819, -0.022016, -0.017035, -0.010140, -0.006152, -0.001830, 0.007662, 0.021147, 0.035099, 0.050547, 0.064637, 0.075035, 0.080262
#*# 	-0.083427, -0.073899, -0.063679, -0.053631, -0.034626, -0.020703, -0.021200, -0.017990, -0.005678, -0.002561, 0.002965, 0.013116, 0.022947, 0.032500, 0.051447, 0.064101, 0.073940, 0.081021
#*# 	-0.094119, -0.083663, -0.073797, -0.063445, -0.045568, -0.028063, -0.028565, -0.024129, -0.010568, -0.004412, -0.001785, 0.007872, 0.023345, 0.033149, 0.046085, 0.057201, 0.066639, 0.079692
#*# 	-0.095029, -0.079479, -0.064188, -0.058445, -0.041481, -0.031845, -0.025908, -0.017292, -0.004756, 0.005375, 0.013460, 0.022920, 0.035432, 0.043646, 0.056049, 0.068078, 0.081198, 0.090444
#*# 	-0.091528, -0.072214, -0.056660, -0.048930, -0.035783, -0.022186, -0.013676, -0.000379, 0.013680, 0.022805, 0.028832, 0.037142, 0.049347, 0.053794, 0.069026, 0.080596, 0.090634, 0.100259
#*# 	-0.090817, -0.074398, -0.062553, -0.049806, -0.035964, -0.016384, -0.008839, 0.001220, 0.014483, 0.028045, 0.036133, 0.044838, 0.056072, 0.060353, 0.074317, 0.084465, 0.092407, 0.103574
#*# 	-0.098469, -0.081005, -0.066426, -0.051612, -0.036083, -0.017952, -0.001950, 0.009084, 0.025847, 0.037016, 0.045914, 0.057869, 0.067838, 0.076583, 0.085800, 0.092177, 0.099281, 0.110822
#*# x_count = 18
#*# y_count = 18
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 35.0
#*# max_x = 325.0
#*# min_y = 11.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 55.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 39.6
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 15.923
#*# pid_ki = 0.877
#*# pid_kd = 72.250
#*#
#*# [scanner model default]
#*# model_coef = 1.5745626870645575,
#*# 	1.90782358999222,
#*# 	0.765289465806575,
#*# 	0.36476823670168224,
#*# 	0.28102806599950536,
#*# 	0.1908492927607439,
#*# 	-0.12834586219345107,
#*# 	-0.11661161371546087,
#*# 	0.15771494266621786,
#*# 	0.10551006122553368
#*# model_domain = 3.2709867104392894e-07,3.3390587363140394e-07
#*# model_range = 0.200000,5.100000
#*# model_temp = 61.184191
#*# model_offset = 0.00000
#*# model_mode = touch
#*# model_fw_version = CARTOGRAPHER 5.1.0
#*#
#*# [scanner]
#*# scanner_touch_threshold = 1000
#*# scanner_touch_z_offset = 0.120
#*# mode = touch
#*# scanner_touch_speed = 3
